# name: Deploy to EC2

# on:
#   push:
#     branches:
#       - main  # Trigger when code is pushed to main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#       # - name: Create .env file
#       #   run: |
#       #     echo "${{ secrets.ENV_FILE }}" | tr -d '\r' > .env

#       - name: Decode and create .env file
#         run: |
#           echo "${{ secrets.ENV_FILE_BASE64 }}" | base64 --decode > .env

#       # Configure AWS credentials
#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Log in to Amazon ECR
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
        
#       - name: Build and Push Docker Image
#         run: |
#           IMAGE_TAG=${{ secrets.ECR_REPOSITORY }}:latest
#           docker build -t $IMAGE_TAG .
#           docker push $IMAGE_TAG

#       - name: AWS SSM Send-Command
#         uses: peterkimzz/aws-ssm-send-command@v1.1.1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
#           instance-ids: ${{ secrets.AWS_INSTANCE_ID }}
#           working-directory: /home/ubuntu
#           command: |
#             echo "Stopping old container..."
#             sudo docker stop webapp || true
#             sudo docker rm webapp || true

#             echo "Pulling latest image..."
#             sudo docker pull ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}

#             echo "Running new container..."
#             sudo docker run -d --name webapp -p 80:80 ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}

#             echo "Cleaning up old images..."
#             sudo docker image prune -af
#           comment: "Re-deploying Docker container via AWS SSM."
